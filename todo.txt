- DONE - implement pay-taxes endpoint
- DONE - check if HTTP methods are right. POST cannot be used in cases when we don't add anything. Instead use e.g. PUT when just updating
- DONE - created_at and modified_at can be one row and should be called right before using to give the exact time
- DONE - borger change structure and fix issues
- DONE - add "if successful" to method "return" documentation
- DONE - change names of python modules to clear form (e.g. from nemidborger to borger)
- DONE - change CRUD update and delete, merge try-except-else blocks and remove the last try-except-else block
- DONE - change names of the files like year to year, user to user, also change endpoint names to simple ones (do not change SQL tho)
- DONE - add cascade constraints (update and delete), esp. add the borger one, it is required to remove address when user is removed + check if FK-PK references in sql tables are correctly written (maybe they need some name)
- DONE - create gateway 
- DONE - change routes in requests
- DONE - add everywhere UNIQUE constraint (No need to add to PK, they are UNIQUE by nature)
- create wiki (and remove helper.txt)
- create diagram and add to README.md

- DONE - recreate all databases
- check if all routes work
- prepare routes in Insomnia